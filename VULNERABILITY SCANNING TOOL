import socket
import requests
import subprocess

def scan_open_ports(host, ports):
    open_ports = []
    for port in ports:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((host, port))
        if result == 0:
            open_ports.append(port)
        sock.close()
    return open_ports

def check_outdated_software():
    outdated_software = {}
    software_list = ["python", "node", "nginx"]
    for software in software_list:
        try:
            result = subprocess.run([software, "--version"], capture_output=True, text=True)
            version = result.stdout.strip()
            outdated_software[software] = version
        except FileNotFoundError:
            outdated_software[software] = "Not Installed"
    return outdated_software

def check_website_security(url):
    try:
        response = requests.get(url)
        headers = response.headers
        security_headers = {
            "Strict-Transport-Security": headers.get("Strict-Transport-Security"),
            "Content-Security-Policy": headers.get("Content-Security-Policy"),
            "X-Content-Type-Options": headers.get("X-Content-Type-Options"),
            "X-Frame-Options": headers.get("X-Frame-Options"),
            "X-XSS-Protection": headers.get("X-XSS-Protection")
        }
        return security_headers
    except requests.RequestException as e:
        return f"Error checking website security: {e}"

def main():
    target_host = input("Enter the target host : ")
    ports_to_scan = [80, 443, 22, 21, 25, 8080, 3306, 5432]

    print("\nScanning for open ports...")
    open_ports = scan_open_ports(target_host, ports_to_scan)
    if open_ports:
        print(f"Open ports on {target_host}: {', '.join(map(str, open_ports))}")
    else:
        print(f"No open ports found on {target_host}.")

    print("\nChecking for outdated software...")
    outdated_software = check_outdated_software()
    for software, version in outdated_software.items():
        print(f"{software}: {version}")

    website_url = f"http://{target_host}"  # Assuming HTTP for simplicity
    print(f"\nChecking website security headers for {website_url}...")
    security_headers = check_website_security(website_url)
    if isinstance(security_headers, dict):
        for header, value in security_headers.items():
            print(f"{header}: {value}")
    else:
        print(security_headers)

if __name__ == "__main__":
    main()
